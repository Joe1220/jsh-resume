{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled, { css } from \"styled-components\";\nimport ReactDOM from \"react-dom\";\nimport { UseModal } from \"utils/hooks\";\nimport { useEffect, useRef } from \"react\";\nvar StyledModalContainer = styled(\"div\").withConfig({\n  displayName: \"ModalContainer__StyledModalContainer\",\n  componentId: \"sc-5mdmjj-0\"\n})([\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5);opacity:0;padding:\", \";\", \"\"], function (props) {\n  return props.theme.spaces.base;\n}, function (props) {\n  return props.isShow && css([\"opacity:1;transition:opacity 1s ease-in-out;\"]);\n});\nvar StyledModalContent = styled(\"div\").withConfig({\n  displayName: \"ModalContainer__StyledModalContent\",\n  componentId: \"sc-5mdmjj-1\"\n})([\"position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);overflow-y:auto;min-width:400px;width:478px;background:\", \";\"], function (props) {\n  return props.theme.colors.white;\n});\n/**\n * 전체 modal의 컴포넌트\n * utils -> hooks의 modal hooks로 show를 결정\n * 다른 모달창은 organisms -> modals내에 설정한다.\n * ref 로 outside 클릭설정\n */\n\nvar ModalContainer = function ModalContainer(Component) {\n  return function (_ref) {\n    var children = _ref.children,\n        props = _objectWithoutProperties(_ref, [\"children\"]);\n\n    var _UseModal = UseModal(),\n        isShow = _UseModal.isShow,\n        toggleShow = _UseModal.toggleShow;\n\n    return __jsx(React.Fragment, null, __jsx(\"span\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: toggleShow\n    }, children), __jsx(ModalPortalContent, _extends({\n      Component: Component,\n      children: children,\n      isShow: isShow,\n      toggleShow: toggleShow\n    }, props)));\n  };\n};\n\nvar ModalPortalContent = function ModalPortalContent(_ref2) {\n  var Component = _ref2.Component,\n      children = _ref2.children,\n      toggleShow = _ref2.toggleShow,\n      isShow = _ref2.isShow,\n      props = _objectWithoutProperties(_ref2, [\"Component\", \"children\", \"toggleShow\", \"isShow\"]);\n\n  var ref = useRef(null);\n\n  var outsideClick = function outsideClick(e) {\n    if (ref.current && !ref.current.contains(e.target)) {\n      toggleShow();\n    }\n  };\n\n  useEffect(function () {\n    document.addEventListener(\"click\", outsideClick);\n    return function () {\n      document.removeEventListener(\"click\", outsideClick);\n    };\n  });\n  return isShow ? ReactDOM.createPortal(__jsx(StyledModalContainer, {\n    isShow: isShow\n  }, __jsx(StyledModalContent, {\n    ref: ref\n  }, __jsx(Component, props))), document.body) : null;\n};\n\nexport default ModalContainer;","map":null,"metadata":{},"sourceType":"module"}