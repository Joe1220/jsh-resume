{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled, { css } from \"styled-components\";\nimport { P } from \"components/atoms\";\nconst StyledPList = styled(\"div\").withConfig({\n  displayName: \"PList__StyledPList\",\n  componentId: \"alvfau-0\"\n})([\"display:flex;flex-direction:column;\", \" margin:12px 0 30px 0;p > span{margin-bottom:\", \";}p{margin-bottom:\", \";}\"], props => props.isRow && css([\"flex-direction:row;p{:not(:last-child){margin-right:\", \";}}\"], props => props.theme.spaces.base), props => props.theme.spaces.lg, props => props.theme.spaces.base);\n/**\n * 문자열 받은 후 default로 &bull;로 문자 사이 분할. isSlash일 경우 /로 분할\n * @param customSeparate `원하는 separate 문자가 있을 경우 기입 (ex - /, - 등...)`\n */\n\nconst PList = (_ref) => {\n  let {\n    texts,\n    customSeparate,\n    isRow\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"texts\", \"customSeparate\", \"isRow\"]);\n\n  return __jsx(StyledPList, {\n    isRow: isRow\n  }, texts.map((text, index) => __jsx(P, _extends({\n    key: index\n  }, props), customSeparate && __jsx(\"span\", null, customSeparate), text)));\n};\n\nexport default PList;","map":null,"metadata":{},"sourceType":"module"}