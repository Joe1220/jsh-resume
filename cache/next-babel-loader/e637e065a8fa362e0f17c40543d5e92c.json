{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { Label, Hr, A } from \"components/atoms\";\nimport { PList, SeparateTexts } from \"components/molecules\";\nimport { dateChangeFormatList } from \"utils/date\";\nvar StyledInfoGroup = styled(\"div\").withConfig({\n  displayName: \"InfoGroup__StyledInfoGroup\",\n  componentId: \"k875zv-0\"\n})([\"display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;div{&:not(:last-child){margin-bottom:\", \";}}\"], function (props) {\n  return props.theme.spaces.xlg;\n});\n/**\n * @param reverse `reverse가 참일 시, 글씨 색상이 변경`\n * @param subInfo `title 밑 하단 간략 정보(work section 일 경우 position, summary, 날짜 표기)를 배열로 표기. 3개 항목으로 제한`\n * `이 때 3번째 배열 내용은 날짜로, format 변형을 함.`\n * @param bottomLine `true 일 시 하단 줄 생성(분리 줄)`\n * @param summaries `디테일한 정보의 배열`\n */\n\nvar InfoGroup = function InfoGroup(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"title\" : _ref$title,\n      _ref$website = _ref.website,\n      website = _ref$website === void 0 ? \"https://www.psa-ict.co.kr/main/main.psa\" : _ref$website,\n      subInfo = _ref.subInfo,\n      _ref$summaries = _ref.summaries,\n      summaries = _ref$summaries === void 0 ? [\"프론트엔트(React, React-Native) 전체 담당\", \"일부 백엔드 api 개발 및 유지보수\"] : _ref$summaries,\n      date = _ref.date,\n      firstCustomSeparate = _ref.firstCustomSeparate,\n      secondCustomSeparate = _ref.secondCustomSeparate,\n      bottomLine = _ref.bottomLine;\n  var customInfo = date && subInfo ? [].concat(_toConsumableArray(subInfo), [dateChangeFormatList(date)]) : subInfo;\n  return __jsx(\"div\", null, website ? __jsx(A, {\n    href: website\n  }, __jsx(Label, {\n    lg: true,\n    thick: true\n  }, title)) : __jsx(Label, {\n    lg: true,\n    thick: true\n  }, title), subInfo && __jsx(SeparateTexts, {\n    texts: customInfo,\n    customSeparate: firstCustomSeparate\n  }), __jsx(PList, {\n    texts: summaries,\n    customSeparate: secondCustomSeparate\n  }), bottomLine && __jsx(Hr, null));\n};\n\nvar InfoGroups = function InfoGroups(_ref2) {\n  var infos = _ref2.infos,\n      props = _objectWithoutProperties(_ref2, [\"infos\"]);\n\n  return __jsx(StyledInfoGroup, null, infos.map(function (info, index) {\n    return __jsx(InfoGroup, _extends({\n      key: index\n    }, info, props));\n  }));\n};\n\nexport default InfoGroups;","map":null,"metadata":{},"sourceType":"module"}